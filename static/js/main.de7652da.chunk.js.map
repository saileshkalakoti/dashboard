{"version":3,"sources":["serviceWorker.js","utils/React_Chart.js","Components/ChartContainer.js","utils/utils.js","Components/Grid.js","Components/ChartParams.js","utils/constant.js","Components/Table.js","Components/NodeCard.js","Dashboard.js","index.js"],"names":["Boolean","window","location","hostname","match","RadarChart","draw","id","d","options","onClickHandler","cfg","radius","w","h","factor","factorLegend","levels","maxValue","radians","Math","PI","opacityArea","ToRight","TranslateX","TranslateY","ExtraWidthX","ExtraWidthY","color","d3","category10","i","max","map","o","value","allAxis","j","axis","total","length","min","Format","select","remove","tooltip","g","append","attr","levelFactor","selectAll","data","enter","sin","cos","style","text","series","forEach","y","x","dataValues","push","parseFloat","str","pti","on","z","this","transition","newX","newY","colorscale","ChartContainer","props","state","LegendOptions","chartRef","React","createRef","myChartRef","current","onClick","svg","legend","renderChart","backgroundColor","ref","measures","Component","formatData","columnKey","allName","item","Set","topic","allValues","filter","reduce","a","b","parseInt","compleObj","graphData","random","console","log","relevanceData","filterByTag","tag","tagVal","getUniqueList","type","allKeys","jsonData","uniqueKeys","concat","computeResult","gridData","sortedData","sort","intensity","gridObject","getCardInfo","relevance","Meaning","likelihood","likelihoodData","title","year","start_year","url","titleCase","splitStr","toLowerCase","split","charAt","toUpperCase","substring","join","Grid","renderGridItem","href","target","textDecoration","className","fontSize","fontFamily","margin","display","justifyContent","ChartParams","key","k","name","e","handleClick","minWidth","renderDropdown","listParams","sector","region","pestle","columns","Header","accessor","Cell","wordWrap","whiteSpace","lineHeight","original","maxWidth","slice","Tab","updateSearchQuery","async","setState","searchQuery","handleSearch","updateTableData","searchData","updatedData","tableData","Object","values","includes","columnData","marginRight","onChange","defaultPageSize","NodeCard","isGrid","float","cursor","paddingBottom","initialData","measure","allGridData","Dashboard","handleChangeValue","persist","searchResults","prevState","selectedParams","handleMeasures","checked","completeData","dataAfterTag","dashboardData","finalData","isEmpty","currentData","isChecked","document","getElementById","scrollIntoView","nodeData","topicData","getNodeData","gridResult","width","marginLeft","marginTop","minHeight","padding","paddingTop","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de7652da.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//Practically all this code comes from https://github.com/alangrafu/radar-chart-d3\n//I only made some additions and aesthetic adjustments to make the chart look better \n//(of course, that is only my point of view)\n//Such as a better placement of the titles at each line end, \n//adding numbers that reflect what each circular level stands for\n//Not placing the last level and slight differences in color\n//\n//For a bit of extra information check the blog about it:\n//http://nbremer.blogspot.nl/2013/09/making-d3-radar-chart-look-bit-better.html\nimport * as d3 from \"d3\"\nvar RadarChart = {\n    draw: function(id, d, options, onClickHandler){\n    var cfg = {\n       radius: 5,\n       w: 600,\n       h: 600,\n       factor: 1,\n       factorLegend: .85,\n       levels: 3,\n       maxValue: 0,\n       radians: 2 * Math.PI,\n       opacityArea: 0.5,\n       ToRight: 5,\n       TranslateX: 80,\n       TranslateY: 30,\n       ExtraWidthX: 100,\n       ExtraWidthY: 100,\n       color: d3.scale.category10()\n      };\n      \n      if('undefined' !== typeof options){\n        for(var i in options){\n          if('undefined' !== typeof options[i]){\n            cfg[i] = options[i];\n          }\n        }\n      }\n      cfg.maxValue = Math.max(cfg.maxValue, d3.max(d, function(i){return d3.max(i.map(function(o){return o.value;}))}));\n      var allAxis = (d[0].map(function(i, j){return i.axis}));\n      var total = allAxis.length;\n      var radius = cfg.factor*Math.min(cfg.w/2, cfg.h/2);\n      var Format = d3.format('');\n      d3.select(id).select(\"svg\").remove();\n      \n      var g = d3.select(id)\n              .append(\"svg\")\n              .attr(\"width\", cfg.w+cfg.ExtraWidthX)\n              .attr(\"height\", cfg.h+cfg.ExtraWidthY)\n              .append(\"g\")\n              .attr(\"transform\", \"translate(\" + cfg.TranslateX + \",\" + cfg.TranslateY + \")\");\n              ;\n  \n      var tooltip;\n      \n      //Circular segments\n      for(var j=0; j<cfg.levels-1; j++){\n        var levelFactor = cfg.factor*radius*((j+1)/cfg.levels);\n        g.selectAll(\".levels\")\n         .data(allAxis)\n         .enter()\n         .append(\"svg:line\")\n         .attr(\"x1\", function(d, i){return levelFactor*(1-cfg.factor*Math.sin(i*cfg.radians/total));})\n         .attr(\"y1\", function(d, i){return levelFactor*(1-cfg.factor*Math.cos(i*cfg.radians/total));})\n         .attr(\"x2\", function(d, i){return levelFactor*(1-cfg.factor*Math.sin((i+1)*cfg.radians/total));})\n         .attr(\"y2\", function(d, i){return levelFactor*(1-cfg.factor*Math.cos((i+1)*cfg.radians/total));})\n         .attr(\"class\", \"line\")\n         .style(\"stroke\", \"grey\")\n         .style(\"stroke-opacity\", \"0.75\")\n         .style(\"stroke-width\", \"0.3px\")\n         .attr(\"transform\", \"translate(\" + (cfg.w/2-levelFactor) + \", \" + (cfg.h/2-levelFactor) + \")\");\n      }\n  \n      //Text indicating at what % each level is\n      for(var j=0; j<cfg.levels; j++){\n        var levelFactor = cfg.factor*radius*((j+1)/cfg.levels);\n        g.selectAll(\".levels\")\n         .data([1]) //dummy data\n         .enter()\n         .append(\"svg:text\")\n         .attr(\"x\", function(d){return levelFactor*(1-cfg.factor*Math.sin(0));})\n         .attr(\"y\", function(d){return levelFactor*(1-cfg.factor*Math.cos(0));})\n         .attr(\"class\", \"legend\")\n         .style(\"font-family\", \"sans-serif\")\n         .style(\"font-size\", \"10px\")\n         .attr(\"transform\", \"translate(\" + (cfg.w/2-levelFactor + cfg.ToRight) + \", \" + (cfg.h/2-levelFactor) + \")\")\n         .attr(\"fill\", \"#737373\")\n         .text(Format((j+1)*cfg.maxValue/cfg.levels));\n      }\n      \n      var series = 0;\n  \n      var axis = g.selectAll(\".axis\")\n              .data(allAxis)\n              .enter()\n              .append(\"g\")\n              .attr(\"class\", \"axis\");\n  \n      axis.append(\"line\")\n          .attr(\"x1\", cfg.w/2)\n          .attr(\"y1\", cfg.h/2)\n          .attr(\"x2\", function(d, i){return cfg.w/2*(1-cfg.factor*Math.sin(i*cfg.radians/total));})\n          .attr(\"y2\", function(d, i){return cfg.h/2*(1-cfg.factor*Math.cos(i*cfg.radians/total));})\n          .attr(\"class\", \"line\")\n          .style(\"stroke\", \"grey\")\n          .style(\"stroke-width\", \"1px\");\n  \n      axis.append(\"text\")\n          .attr(\"class\", \"legend\")\n          .text(function(d){return d})\n          .style(\"font-family\", \"sans-serif\")\n          .style(\"font-size\", \"11px\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"dy\", \"1.5em\")\n          .attr(\"transform\", function(d, i){return \"translate(0, -10)\"})\n          .attr(\"x\", function(d, i){return cfg.w/2*(1-cfg.factorLegend*Math.sin(i*cfg.radians/total))-60*Math.sin(i*cfg.radians/total);})\n          .attr(\"y\", function(d, i){return cfg.h/2*(1-Math.cos(i*cfg.radians/total))-20*Math.cos(i*cfg.radians/total);});\n  \n   \n      d.forEach(function(y, x){\n        var dataValues = [];\n        g.selectAll(\".nodes\")\n          .data(y, function(j, i){\n            dataValues.push([\n              cfg.w/2*(1-(parseFloat(Math.max(j.value, 0))/cfg.maxValue)*cfg.factor*Math.sin(i*cfg.radians/total)), \n              cfg.h/2*(1-(parseFloat(Math.max(j.value, 0))/cfg.maxValue)*cfg.factor*Math.cos(i*cfg.radians/total))\n            ]);\n          });\n        dataValues.push(dataValues[0]);\n        g.selectAll(\".area\")\n                       .data([dataValues])\n                       .enter()\n                       .append(\"polygon\")\n                       .attr(\"class\", \"radar-chart-serie\"+series)\n                       .style(\"stroke-width\", \"2px\")\n                       .style(\"stroke\", cfg.color(series))\n                       .attr(\"points\",function(d) {\n                           var str=\"\";\n                           for(var pti=0;pti<d.length;pti++){\n                               str=str+d[pti][0]+\",\"+d[pti][1]+\" \";\n                           }\n                           return str;\n                        })\n                       .style(\"fill\", function(j, i){return cfg.color(series)})\n                       .style(\"fill-opacity\", cfg.opacityArea)\n                       .on('mouseover', function (d){\n                                          var z = \"polygon.\"+d3.select(this).attr(\"class\");\n                                          g.selectAll(\"polygon\")\n                                           .transition(200)\n                                           .style(\"fill-opacity\", 0.1); \n                                          g.selectAll(z)\n                                           .transition(200)\n                                           .style(\"fill-opacity\", .7);\n                                        })\n                       .on('mouseout', function(){\n                                          g.selectAll(\"polygon\")\n                                           .transition(200)\n                                           .style(\"fill-opacity\", cfg.opacityArea);\n                       });\n        series++;\n      });\n      series=0;\n  \n  \n      d.forEach(function(y, x){\n        g.selectAll(\".nodes\")\n          .data(y).enter()\n          .append(\"svg:circle\")\n          .attr(\"class\", \"radar-chart-serie\"+series)\n          .attr('r', cfg.radius)\n          .attr(\"alt\", function(j){return Math.max(j.value, 0)})\n          .attr(\"cx\", function(j, i){\n             let dataValues=[]\n             dataValues.push([\n              cfg.w/2*(1-(parseFloat(Math.max(j.value, 0))/cfg.maxValue)*cfg.factor*Math.sin(i*cfg.radians/total)), \n              cfg.h/2*(1-(parseFloat(Math.max(j.value, 0))/cfg.maxValue)*cfg.factor*Math.cos(i*cfg.radians/total))\n          ]);\n          return cfg.w/2*(1-(Math.max(j.value, 0)/cfg.maxValue)*cfg.factor*Math.sin(i*cfg.radians/total));\n          })\n          .attr(\"cy\", function(j, i){\n            return cfg.h/2*(1-(Math.max(j.value, 0)/cfg.maxValue)*cfg.factor*Math.cos(i*cfg.radians/total));\n          })\n          .attr(\"data-id\", function(j){return j.axis})\n          .style(\"fill\", cfg.color(series)).style(\"fill-opacity\", .9)\n          .on('mouseover', function (d){\n                      let newX =  parseFloat(d3.select(this).attr('cx')) - 10;\n                      let newY =  parseFloat(d3.select(this).attr('cy')) - 5;\n                      \n                      tooltip\n                          .attr('x', newX)\n                          .attr('y', newY)\n                          .text(Format(d.value))\n                          .transition(200)\n                          .style('opacity', 1);\n                          \n                      var z = \"polygon.\"+d3.select(this).attr(\"class\");\n                      g.selectAll(\"polygon\")\n                          .transition(200)\n                          .style(\"fill-opacity\", 0.1); \n                      g.selectAll(z)\n                          .transition(200)\n                          .style(\"fill-opacity\", .7);\n                    })\n          .on('mouseout', function(){\n                      tooltip\n                          .transition(200)\n                          .style('opacity', 0);\n                      g.selectAll(\"polygon\")\n                          .transition(200)\n                          .style(\"fill-opacity\", cfg.opacityArea);\n                    })\n          .on('click', function(d){\n            onClickHandler(d.axis)\n          })\n          .append(\"svg:title\")\n          .text(function(j){return Math.max(j.value, 0)});\n  \n        series++;\n      });\n      //Tooltip\n      tooltip = g.append('text')\n                 .style('opacity', 0)\n                 .style('font-family', 'sans-serif')\n                 .style('font-size', '13px');\n    }\n  };\n  \nexport default RadarChart;","import React from 'react';\nimport RadarChart from \"../utils/React_Chart\"\nimport '../style/App.css';\nimport * as d3 from \"d3\"\nimport \"../style/React_Chart.css\"\n\nvar w = 500,\n\th = 500;\n\nvar colorscale = d3.scale.category10();\nclass ChartContainer extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      data : [[]],\n      LegendOptions:[],\n    }\n    this.chartRef = React.createRef();\n  }\n\n  static getDerivedStateFromProps(props, state){\n    return {\n      data: props.data,\n      LegendOptions: props.measures,\n    }\n  }\n\nrenderChart(){\n\n \n  var cfg = {\n    w: 400,\n    h: 400,\n    maxValue: 0.6,\n    levels: 6,\n    ExtraWidthX: 300\n  }\n\n  const myChartRef = this.chartRef.current;\n  RadarChart.draw(myChartRef, this.state.data, cfg, this.props.onClick);\n  \nvar svg = d3.select(myChartRef)\n.selectAll('svg')\n.append('svg')\n.attr(\"width\", w+300)\n.attr(\"height\", h)\n\n//Create the title for the legend\nvar text = svg.append(\"text\")\n.attr(\"class\", \"title\")\n.attr('transform', 'translate(90,0)') \n.attr(\"x\", w - 70)\n.attr(\"y\", 10)\n.attr(\"font-size\", \"12px\")\n.attr(\"fill\", \"#404040\")\n.text(\"Colours\");\n  \n//Initiate Legend\t\nvar legend = svg.append(\"g\")\n.attr(\"class\", \"legend\")\n.attr(\"height\", 100)\n.attr(\"width\", 200)\n.attr('transform', 'translate(90,20)') \n;\n//Create colour squares\nlegend.selectAll('rect')\n  .data(this.state.LegendOptions)\n  .enter()\n  .append(\"rect\")\n  .attr(\"x\", w - 65)\n  .attr(\"y\", function(d, i){ return i * 20;})\n  .attr(\"width\", 10)\n  .attr(\"height\", 10)\n  .style(\"fill\", function(d, i){ return colorscale(i);})\n  ;\n//Create text next to squares\nlegend.selectAll('text')\n  .data(this.state.LegendOptions)\n  .enter()\n  .append(\"text\")\n  .attr(\"x\", w - 52)\n  .attr(\"y\", function(d, i){ return i * 20 + 9;})\n  .attr(\"font-size\", \"11px\")\n  .attr(\"fill\", \"#737373\")\n  .text(function(d) { return d; })\n  ;\t\n}\n  render() {\n    this.renderChart();\n    return (\n        <div id=\"myChart\" style = {{backgroundColor:\"white\"}} ref={this.chartRef}/>\n    );\n  }\n}\n\nexport default ChartContainer;\n","import jsonData from \"./../assets/jsondata.json\";\nimport relevanceData from \"./../assets/relevance.json\"\nimport likelihoodData from \"./../assets/Likelihood.json\"\nconsole.log(relevanceData)\nexport default function formatData(data, columnKey, axis) {\n    const allName = data.map(item => item[axis])\n    const uniqueTopics = [...new Set(allName)]\n    const initialData = uniqueTopics.map( topic => {\n        const allValues = data.filter( item => item[axis] === topic).map( item => item[columnKey]);\n        const value = (allValues.reduce((a, b) => parseInt(a) + parseInt(b), 0) || 0)/ allValues.length\n        return {\n            compleObj : data.filter( item => item[axis] === topic),\n            graphData: {\n            axis: topic,\n            id: Math.random(),\n            value: parseInt(value)},\n        }\n    }) \n    return initialData\n}\n\nexport const filterByTag = (data, tag, tagVal) => data.filter(item => item[tag] === tagVal)\n\nexport function getUniqueList( type ) {\n    let allKeys = jsonData.map(item => item[type])\n    allKeys = allKeys.filter( item => item !==\"\")\n    let uniqueKeys = [...new Set(allKeys)]\n    uniqueKeys = [\"All\"].concat(uniqueKeys)\n    return uniqueKeys;\n}\n\nexport function computeResult (gridData) {\n    const sortedData = gridData.map(item => {\n        item.compleObj.sort( (a, b) => parseInt(a.intensity) < parseInt(b.intensity) ? 1 : -1)\n        return item.compleObj[0]\n    })\n    console.log(sortedData)\n    const gridObject = sortedData.map( item => {\n        return getCardInfo (item);\n    })\n    console.log(gridObject)\n    return gridObject\n}\n\nexport function getNodeData(topic) {\n    const topicData = jsonData.filter( item => item.topic === topic);\n    topicData.sort( (a, b) => parseInt(a.intensity) < parseInt(b.intensity) ? 1 : -1)\n\n    return topicData[0];\n}\n\nexport function getCardInfo (item) {\n    return {\n        relevance: parseInt(item.relevance) ? relevanceData[item.relevance - 1].Meaning : \"\",\n        likelihood: parseInt(item.likelihood) ? likelihoodData[item.likelihood - 1].Meaning : \"\",\n        topic: item.topic,\n        title: item.title,\n        year: item.start_year,\n        intensity: item.intensity,\n        url: item.url\n\n    }\n}\n\nexport function titleCase(str) {\n    console.log(\"here\")\n    var splitStr = str.toLowerCase().split(' ');\n    for (var i = 0; i < splitStr.length; i++) {\n        // You do not need to check if i is larger than splitStr length, as your for does that for you\n        // Assign it back to the array\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \n    }\n    // Directly return the joined string\n    return splitStr.join(' '); \n }","import React from \"react\"\nimport '../style/Grid.css'\nimport {titleCase} from \"../utils/utils\"\nexport default class Grid extends React.Component {\n    renderGridItem = () => {\n        return this.props.gridData.map( item => {\n            return (\n                <a href={item.url} target=\"_blank\" style = {{textDecoration: \"none\"}}>\n                    <div className = \"box\">\n                    <div className = \"text\" style ={{fontSize:\"15px\", color: \"#ff8acc\", fontFamily: \"'Karla', sans-serif\", margin: \"10px 0\"}}><h4>{titleCase(item.topic)}</h4></div>\n                    <h5 style ={{color: \"#505458\", fontFamily: \"'Karla', sans-serif\", fontSize:\"12px\", display:\"flex\", justifyContent:\"space-between\"}} >\n                        <span>{item.intensity}</span> | \n                        <span>{item.relevance}</span> | \n                        <span>{item.likelihood}</span> \n                        {item.year ? <span>| {item.year}</span> :\"\"}\n                    </h5>\n                </div>\n                    </a>\n            )\n        })\n    }\n    render() {\n        return (\n                <div className = \"wrapper\">\n                    {this.renderGridItem()}\n                </div>\n        )\n    }\n}","import React from \"react\";\nexport default class ChartParams extends React.Component {\n    \n    renderDropdown( options, key ) {\n        return options.map((item, k) => <option value = {item} key = {k}>{item}</option>)\n    }\n\n    render() {\n        return (\n            <>\n                <div className =\"topic\">\n                <input type = \"radio\" name = \"radioId\" value = \"topic\" onClick={(e) => this.props.handleClick(e, \"topic\")}/>Topic<br/>\n                    <select onClick={(e) => this.props.handleClick(e, \"topic\")} style = {{minWidth: \"200px\"}}>\n                        {this.renderDropdown(this.props.listParams.topic, \"topic\")}\n                    </select>\n                </div>\n                <div className =\"sector\" style = {{minWidth: \"200px\"}}>\n                <input type = \"radio\" name = \"radioId\" value = \"sector\" onClick={(e) => this.props.handleClick(e, \"sector\")}/>Sector<br/>\n                    <select onClick={(e) => this.props.handleClick(e, \"sector\")} style = {{minWidth: \"200px\"}}>\n                        {this.renderDropdown(this.props.listParams.sector)}\n                    </select>\n                </div>\n                <div className =\"region\" style = {{minWidth: \"200px\"}}>\n                <input type = \"radio\" name = \"radioId\" value = \"region\" onClick={(e) => this.props.handleClick(e, \"region\")}/>Region<br/>\n                    <select onClick={(e) => this.props.handleClick(e, \"region\")} style = {{minWidth: \"200px\"}}>\n                        {this.renderDropdown(this.props.listParams.region)}\n                    </select>\n                </div>\n                <div className =\"pestle\" style = {{minWidth: \"200px\"}}>\n                <input type = \"radio\" name = \"radioId\" value = \"pestle\" onClick={(e) => this.props.handleClick(e, \"pestle\")}/>Pestle<br/>\n                    <select onClick={(e) => this.props.handleClick(e, \"pestle\")} style = {{minWidth: \"200px\"}}>\n                        {this.renderDropdown(this.props.listParams.pestle)}\n                    </select>\n                </div>\n            </>\n        )\n    }\n}","import React from \"react\"\nexport const columns = [{\n    Header: 'Title',\n    minWidth: 300,\n    accessor: 'title', // String-based value accessors!\n  Cell: props =>{  return <div style = {{wordWrap:\"break-word\", whiteSpace:\"pre-wrap\", fontSize: \"15px\", lineHeight: \"40px\"}}><div><a href={props.original.url} target = \"_blank\" style ={{textDecoration: \"none\"}}>{props.value}</a></div></div> }// Custom cell components!\n  }, {\n    Header: 'Topic',\n    accessor: 'topic',\n    maxWidth: 120,\n    Cell: props =>{  return <div style = {{wordWrap:\"break-word\", whiteSpace:\"pre-wrap\", fontSize: \"15px\", lineHeight: \"40px\"}}><div>{props.value.charAt(0).toUpperCase() + props.value.slice(1)}</div></div> }// Custom cell components!\n  }, {\n    id: 'friendName', // Required because our accessor is not a string\n    Header: 'Year',\n    maxWidth: 90,\n    accessor: 'start_year',\n    // accessor: d => d.friend.name // Custom value accessors!\n  }, {\n    Header: 'Intensity',\n    maxWidth: 80,\n    accessor: 'intensity'\n  }, {\n    // Header: props => <span>Friend Age</span>, // Custom header components!\n    Header: 'Sector',\n    maxWidth: 120,\n    accessor: 'sector',\n    Cell: props =>{ return <div style = {{wordWrap:\"break-word\", whiteSpace:\"pre-wrap\", fontSize: \"15px\", lineHeight: \"40px\"}}><div>{props.value}</div></div> }// Custom cell components!\n  \n  }, {\n    // Header: props => <span>Friend Age</span>, // Custom header components!\n    Header: 'Region',\n    maxWidth: 120,\n    accessor: 'region',\n    Cell: props =>{ return <div style = {{wordWrap:\"break-word\", whiteSpace:\"pre-wrap\", fontSize: \"15px\", lineHeight: \"40px\"}}><div>{props.value}</div></div> }// Custom cell components!\n  \n  }, {\n    // Header: props => <span>Friend Age</span>, // Custom header components!\n    Header: 'Pestle',\n    maxWidth: 120,\n    accessor: 'pestle',\n    Cell: props =>{ return <div style = {{wordWrap:\"break-word\", whiteSpace:\"pre-wrap\", fontSize: \"15px\", lineHeight: \"40px\"}}><div>{props.value}</div></div> }// Custom cell components!\n  }\n]","import ReactTable from 'react-table'\nimport React from \"react\";\nimport 'react-table/react-table.css'\nimport tableData from \"./../assets/jsondata.json\"\n\nimport {columns} from \"../utils/constant\"\nexport default class Tab extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      searchQuery: props.searchQuery,\n      tableData: tableData,\n    }\n  }\n\n  static getDerivedStateFromProps(props, state){\n    return {\n      searchQuery: props.searchQuery\n    }\n  }\n\n  updateSearchQuery = async (e) => {\n    const value = e.target.value;\n    await this.setState({searchQuery: value})\n    this.props.handleSearch(value)\n    this.updateTableData();\n  }\n\n  updateTableData = () => {\n    const searchData = this.state.searchQuery;\n    const currentData = tableData\n    const updatedData = currentData.filter( item => {\n      const itemValue = Object.values(item).join();\n      if(itemValue.includes(searchData))\n        return true;\n      else \n        return false;\n    })\n    console.log(updatedData)\n    this.setState({ tableData: updatedData})\n  }\n\n  render() {\n\n \n  const columnData = columns\n \n  return (\n    <>\n    <div style ={{display: \"flex\", justifyContent: \"flex-end\", marginRight: \"20px\"}}>Search: <input value={this.state.searchQuery} onChange = {(e) => {this.updateSearchQuery(e)}}/></div>\n    <div style ={{margin: \"20px\", backgroundColor:\"white\"}}><ReactTable\n      className=\"-striped -highlight\"\n      defaultPageSize = {10}\n      data={this.state.tableData}\n      columns={columnData}\n    />\n    </div>\n    </>\n  )\n}\n}","import React from \"react\";\nimport {titleCase, getCardInfo} from \"../utils/utils\"\nexport default class NodeCard extends React.Component{\n\n    render(){\n        let item = this.props.data;\n        const isGrid = this.props.isGrid\n        if(isGrid) {\n            item = getCardInfo(item)\n        }\n        const showDefaultScreen = item.topic ? false : true;\n        if(showDefaultScreen)\n        {\n            return <div className=\"box\"><h2 style ={{fontFamily: \"'Karla', sans-serif\"}}>Click on a node</h2></div>\n        } \n        \n        return (\n            <>\n                <div className = \"box-container\">\n                    <div className = \"text\" style ={{fontSize:\"15px\", color: \"#ff8acc\", fontFamily: \"'Karla', sans-serif\", margin: \"10px 0\"}}><h4>{titleCase(item.topic)}</h4></div>\n                    <h5 style ={{color: \"#505458\", fontFamily: \"'Karla', sans-serif\", fontSize:\"12px\", display:\"flex\", justifyContent:\"space-between\"}} >\n                        <span>{item.intensity}</span> | \n                        <span>{item.relevance}</span> | \n                        <span>{item.likelihood}</span> \n                        {item.year ? <span>| {item.year}</span> :\"\"}\n                    </h5>\n                    <a href={item.url} target=\"_blank\" style = {{textDecoration: \"none\"}}>\n                        <p className =\"para\">{item.title}</p>\n                    </a>\n                    <div style ={{float:\"right\", cursor: \"pointer\", paddingBottom:\"5px\"}} onClick ={()=>this.props.handleSearch(item.topic)} value ={item.topic}>...more</div>\n                </div>\n            </>\n        )\n    }\n}","import React from \"react\";\nimport ChartContainer from \"./Components/ChartContainer\"\nimport Grid from \"./Components/Grid\"\nimport ChartParams from \"./Components/ChartParams\"\nimport Tab from \"./Components/Table\"\nimport NodeCard from \"./Components/NodeCard\"\nimport jsonData from \"./assets/jsondata.json\"\nimport formatData, {getUniqueList, filterByTag, computeResult, getNodeData} from \"./utils/utils\"\nconst initialData = ([\"relevance\"].map( measure => formatData(jsonData, measure, \"topic\")));\nconst allGridData = formatData(jsonData, \"intensity\", \"topic\");\nallGridData.sort((a, b) => parseInt(a.graphData.value) < parseInt(b.graphData.value) ? 1 : -1);\nconst clippedGridData = allGridData.slice(0, 10);\nconst gridData = computeResult(clippedGridData)\n\nconsole.log(initialData)\nexport default class Dashboard extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            measures:[\"relevance\"],\n            axis: \"topic\",\n            searchQuery: \"\",\n            selectedParams : {\n                topic:\"All\",\n                sector:\"All\",\n                region:\"All\",\n                pestle:\"All\",\n            },\n            listParams : {\n                topic: getUniqueList('topic'),\n                sector: getUniqueList('sector'),\n                region: getUniqueList('region'),\n                pestle: getUniqueList('pestle'),\n            },\n            currentData: [[]],\n            gridData : gridData,\n            nodeData: {},\n        }\n    }\n\n    componentDidMount(){\n        this.setState({\n            currentData: [initialData[0].map(item => item.graphData)],\n            gridResult: initialData[0].map(item => item.compleObj)\n        })\n    }\n\n    handleChangeValue = async (e, key) =>{\n        e.persist();\n\n        if(e.target.type === 'radio'){\n            await this.setState({ axis: e.target.value})\n            this.searchResults();\n            return ; \n        }\n        await this.setState((prevState) => {\n            return {\n                ...prevState,\n                selectedParams: {\n                    ...prevState.selectedParams,\n                    [key]: e.target.value\n                }\n            }\n        })\n        this.searchResults();\n    }\n\n    handleMeasures = async (e) => {\n        e.persist();\n        let measures = [...this.state.measures]\n        if(e.target.checked){\n            measures.push(e.target.value);\n        } else {\n            measures = measures.filter( item => item !== e.target.value)\n        }\n\n        await this.setState((prevState) => {\n            return {\n                ...prevState,\n                    measures: measures\n            }\n        })\n        this.searchResults();\n    }\n\n\n\n    searchResults = () => {\n        const completeData = [...jsonData]\n        const selectedParams = { ...this.state.selectedParams};\n        let dataAfterTag = selectedParams.topic !== \"All\" ? filterByTag(completeData, \"topic\", selectedParams.topic) : completeData;\n        dataAfterTag = selectedParams.sector !== \"All\" ? filterByTag(dataAfterTag, \"sector\", selectedParams.sector) : dataAfterTag;\n        dataAfterTag = selectedParams.region !== \"All\" ? filterByTag(dataAfterTag, \"region\", selectedParams.region) : dataAfterTag;\n        const measures = [...this.state.measures]\n        const dashboardData = measures.map( measure => formatData(dataAfterTag, measure, this.state.axis))\n        const allGridData = formatData(dataAfterTag, \"intensity\", this.state.axis);\n        allGridData.sort((a, b) => parseInt(a.graphData.value) < parseInt(b.graphData.value) ? 1 : -1);\n        const clippedGridData = allGridData.slice(0, 10);\n        const gridData = computeResult(clippedGridData)\n        const finalData = dashboardData.map(item => item.map( item => item.graphData));\n        if(finalData.length === 0)\n            return\n        let isEmpty = true;\n        finalData.forEach(item => {\n            isEmpty *= item.length === 0 ? true : false;\n        })\n        if (isEmpty ) return \n        this.setState({currentData: finalData, gridData: gridData})\n    }\n\n    isChecked = (item) => {\n        if(this.state.measures.includes(item))\n            return true;\n        return false\n    }\n\n    handleSearch = (topic) => {\n        this.setState({searchQuery: topic})\n        var elmnt = document.getElementById(\"table\");\n        elmnt.scrollIntoView(); \n    }\n\n    onClickHandler = (topic) => {\n        const nodeData = getNodeData(topic)\n        this.setState({nodeData: nodeData})\n    }\n\n    render(){\n        return(<>\n        <div className =\"container\" style = {{width: \"90%\", display: \"flex\", justifyContent:\"space-between\", marginLeft:\"10px\"}}>\n            <div className = \"chart\" style ={{width:\"60%\"}}><ChartContainer data = {this.state.currentData} measures = {this.state.measures} onClick = {(topic) => this.onClickHandler(topic)}/></div>\n            \n            <div className = \"filters\" style = {{width: \"30%\"}}>\n\n                <div className = \"nodeData\" style={{width: \"100%\", marginTop: \"80px\", minHeight: \"200px\"}}><NodeCard data = {this.state.nodeData} isGrid = {true} handleSearch = {(value) => this.handleSearch(value)}/></div>\n                \n                <div style = {{display:\"flex\", justifyContent: \"space-between\", marginTop:\"20px\"}}>\n                    \n                    <div className = \"chartParams\"><ChartParams listParams = {this.state.listParams} handleClick = {(e, key) => this.handleChangeValue(e, key)}/></div>\n                    <div className = \"measures\">\n                        <h3>Measures</h3>\n                        <input type=\"checkbox\" value = \"relevance\" checked={this.isChecked(\"relevance\")} onChange = {(e) => {this.handleMeasures(e)}}/>     Relevance<br/>\n                        <input type=\"checkbox\" value = \"likelihood\" checked={this.isChecked(\"likelihood\")} onChange = {(e) => {this.handleMeasures(e)}}/>       Likelihood<br/>\n                        <input type=\"checkbox\" value = \"intensity\" checked={this.isChecked(\"intensity\")} onChange = {(e) => {this.handleMeasures(e)}}/>     Intensity<br/>\n                    </div>\n                </div>\n            </div>\n        </div>\n            <div className = \"grid\" style={{marginTop:\"30px\", padding:\"10px 10px 10px 10px\"}}><Grid gridData = {this.state.gridData}/></div>\n        <div id = \"table\" style={{paddingTop:\"40px\"}}><Tab searchQuery ={this.state.searchQuery} handleSearch = {(value) => this.handleSearch(value)}/></div>\n        </>)\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Dashboard from './Dashboard';\n\nReactDOM.render(<Dashboard />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}